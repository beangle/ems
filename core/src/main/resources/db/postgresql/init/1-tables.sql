create table blb.blob_metas (domain_id integer not null, id bigint not null, profile_id integer not null, file_size bigint not null, owner varchar(100) not null, media_type varchar(60) not null, name varchar(300) not null, updated_at timestamp not null, sha varchar(255) not null, file_path varchar(400) not null);
create table blb.profiles (name varchar(100) not null, named_by_sha boolean not null, public_download boolean not null, base varchar(100) not null, id integer not null, domain_id integer not null, users varchar(200));
create table bulletin.docs (archived boolean not null, id bigint not null, file_size integer not null, file_path varchar(255) not null, app_id integer not null, upload_by_id bigint not null, name varchar(255) not null, updated_at timestamp not null);
create table bulletin.docs_user_categories (doc_id bigint not null, user_category_id integer not null);
create table bulletin.news (url varchar(255) not null, archived boolean not null, domain_id integer not null, published_on date not null, contents text, id bigint not null, title varchar(255) not null);
create table bulletin.notices (updated_at timestamp not null, archived boolean not null, popup boolean not null, contents text not null, id bigint not null, created_at timestamp not null, app_id integer not null, title varchar(255) not null, end_on date not null, begin_on date not null, operator_id bigint not null, status integer not null, sticky boolean not null, auditor_id bigint, published_at timestamp);
create table bulletin.notices_docs (notice_id bigint not null, doc_id bigint not null);
create table bulletin.notices_user_categories (notice_id bigint not null, user_category_id integer not null);
create table bulletin.sensitive_words (contents varchar(30) not null, domain_id integer not null, id integer not null);
create table cfg.app_groups (name varchar(100) not null, domain_id integer not null, id integer not null, indexno varchar(255) not null, title varchar(255) not null);
create table cfg.app_types (name varchar(255) not null, id integer not null, title varchar(255) not null);
create table cfg.apps (secret varchar(200) not null, name varchar(100) not null, app_type_id integer not null, url varchar(200) not null, enabled boolean not null, logo_url varchar(255), base varchar(255) not null, id integer not null, remark varchar(200), indexno varchar(50) not null, title varchar(100) not null, group_id integer not null, domain_id integer not null, nav_style varchar(50));
create table cfg.credentials (username varchar(100) not null, domain_id integer not null, id integer not null, password varchar(200) not null, name varchar(100) not null, expired_at timestamp not null, updated_at timestamp not null);
create table cfg.data_sources (name varchar(100) not null, db_id integer not null, id integer not null, app_id integer not null, credential_id integer not null, maximum_pool_size integer not null, remark varchar(200));
create table cfg.dbs (name varchar(100) not null unique, url varchar(200), server_name varchar(100) not null, domain_id integer not null, id integer not null, remark varchar(200), driver varchar(100) not null, database_name varchar(100) not null, port_number integer not null);
create table cfg.dbs_properties (db_id integer not null, value_ varchar(255) not null, name varchar(255) not null);
create table cfg.domains (name varchar(100) not null unique, hostname varchar(100) not null unique, id integer not null, title varchar(200) not null, org_id integer not null);
create table cfg.orgs (name varchar(100) not null, www_url varchar(200) not null, logo_url varchar(200) not null, code varchar(50) not null unique, id integer not null, remark varchar(255), short_name varchar(100) not null);
create table se.app_permissions (begin_at timestamp not null, restrictions varchar(500), id integer not null, resource_id integer not null, end_at timestamp, actions varchar(500), app_id integer not null);
create table se.data_permissions (role_id integer, description varchar(100) not null, restrictions varchar(255), attrs varchar(255), id bigint not null, filters varchar(600) not null, func_resource_id integer, end_at timestamp, begin_at timestamp not null, domain_id integer not null, resource_id integer not null, remark varchar(255), actions varchar(255), app_id integer);
create table se.data_resources (name varchar(200) not null, scope_ integer not null, domain_id integer not null, id integer not null, remark varchar(200), actions varchar(200), title varchar(200) not null, type_name varchar(200) not null);
create table se.func_permissions (role_id integer not null, begin_at timestamp not null, restrictions varchar(100), id bigint not null, actions varchar(100), end_at timestamp, resource_id integer not null, remark varchar(100));
create table se.func_resources (name varchar(200) not null, enabled boolean not null, id integer not null, remark varchar(200), title varchar(200) not null, scope_ integer not null, actions varchar(200), app_id integer not null);
create table se.menus (name varchar(100) not null, entry_id integer, id integer not null, remark varchar(100), indexno varchar(50) not null, title varchar(100) not null, parent_id integer, enabled boolean not null, params varchar(200), app_id integer not null);
create table se.menus_resources (menu_id integer not null, func_resource_id integer not null);
create table ssn.session_configs (concurrent integer not null, check_concurrent boolean not null, id bigint not null, category_id integer not null, check_capacity boolean not null, capacity integer not null, domain_id integer not null, tti_minutes integer not null);
create table ssn.session_events (username varchar(100) not null, domain_id integer not null, id bigint not null, principal varchar(100) not null, detail varchar(1000) not null, event_type integer not null, name varchar(100) not null, ip varchar(255) not null, updated_at timestamp not null);
create table usr.accounts (updated_at timestamp not null, domain_id integer not null, enabled boolean not null, locked boolean not null, id bigint not null, begin_on date not null, user_id bigint not null, password varchar(200) not null, passwd_expired_on date not null, end_on date);
create table usr.avatars (updated_at timestamp not null, file_name varchar(50) not null, id varchar(50) not null, file_path varchar(300) not null, user_id bigint not null);
create table usr.dimensions (name varchar(40) not null, source_ varchar(6000) not null, domain_id integer not null, value_type boolean not null, id integer not null, properties varchar(100), key_name varchar(20), multiple boolean not null, title varchar(40) not null, required boolean not null);
create table usr.group_members (updated_at timestamp not null, id bigint not null, is_member boolean not null, is_manager boolean not null, is_granter boolean not null, group_id integer not null, user_id bigint not null);
create table usr.messages (recipient_id bigint not null, contents varchar(255) not null, id bigint not null, status integer not null, sender_id bigint not null, sent_at timestamp not null, title varchar(255) not null);
create table usr.notifications (recipient_id bigint not null, subject varchar(255) not null, importance integer not null, contents varchar(255) not null, id bigint not null, sent_at timestamp not null);
create table usr.password_configs (mindays integer not null, minclass integer not null, usercheck boolean not null, domain_id integer not null, lcredit integer not null, maxdays integer not null, id integer not null, ucredit integer not null, idledays integer not null, ocredit integer not null, warnage integer not null, minlen integer not null, dcredit integer not null, maxlen integer not null);
create table usr.role_members (updated_at timestamp not null, role_id integer not null, id bigint not null, is_member boolean not null, is_manager boolean not null, is_granter boolean not null, user_id bigint not null);
create table usr.roles (domain_id integer not null, enabled boolean not null, id integer not null, remark varchar(255), indexno varchar(255) not null, parent_id integer, name varchar(100) not null, updated_at timestamp not null, creator_id bigint not null);
create table usr.roles_properties (role_id integer not null, value_ varchar(2000) not null, dimension_id integer not null);
create table usr.roots (updated_at timestamp not null, id integer not null, app_id integer not null, user_id bigint not null);
create table usr.todoes (updated_at timestamp not null, domain_id integer not null, contents varchar(255) not null, id bigint not null, user_id bigint not null);
create table usr.user_categories (en_name varchar(255) not null, code varchar(30) not null unique, id integer not null, remark varchar(255), begin_on date not null, org_id integer not null, end_on date, name varchar(100) not null, updated_at timestamp not null);
create table usr.user_groups (enabled boolean not null, id integer not null, remark varchar(255), indexno varchar(255) not null, org_id integer not null, parent_id integer, name varchar(100) not null, updated_at timestamp not null, creator_id bigint not null);
create table usr.user_groups_properties (user_group_id integer not null, value_ varchar(2000) not null, dimension_id integer not null);
create table usr.user_profiles (name varchar(255) not null, domain_id integer not null, id bigint not null, user_id bigint not null);
create table usr.user_profiles_properties (user_profile_id bigint not null, value_ varchar(2000) not null, dimension_id integer not null);
create table usr.users (code varchar(30) not null, id bigint not null, begin_on date not null, category_id integer not null, org_id integer not null, avatar_id varchar(255), name varchar(100) not null, updated_at timestamp not null, remark varchar(100), end_on date);
create table usr.users_properties (user_id bigint not null, value_ varchar(2000) not null, dimension_id integer not null);
